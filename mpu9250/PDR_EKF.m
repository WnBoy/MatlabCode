%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%自定义步长为0.6m，实际应用需要更改
plen=zeros(pzero,1);
for i=1:pzero
    plen(i)=0.6;
end

dir2=zeros(pzero,1);
for j=1:pzero
    dir2(j)=(-dir(j)*pi)/180;
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                    PDR定位程序 V：0.1
%%%%%%%%%%%%%%%%%%%%%%%%%%%    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

Z=[plen dir2];
% pzero=100;%假设形势过程中的零点个数%%%%%%%%%%%%%%%%%%%%%%%%%大小待定
len=pzero;%仿真步数
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%x_hat为状态向量，x_hat=[ex,yn,s,f],e为东向坐标，n为北向坐标，s为步长，f为航向
%东北位置坐标的噪声We-N(0,1^2),Wn-N(0,1^2),步长噪声Ws-N(0,0.1^2)(0.1m/s),航向的噪声为Wf-N(0,5^2)(5。)
%Z=[plength dir]为测量值，plength为步长，dir为航向角
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% ekf 滤波
Qk = diag([1; 1; 0.1; (5*pi)/180])^2;%动态噪声矩阵
Rk = diag([0.1; (5*pi)/180])^2;%观测噪声矩阵

Pk = 10*eye(4);%估计协方差矩阵的初始值，%%%%%%%%%%%%%%%%%%%%%%%大小待定
Pkk_1 = eye(4);%预测协方差矩阵

x_hat = [0,0,0.6,0]';%状态变量的初始值[ex,ny,s,f]%%%%%%%%%%%%%%%%%%%%%%%大小待定
X_est = zeros(len,4);%EKF估计值
x_forecast = zeros(4,1);%预测值
 % 观测矩阵,是个固定值
H=[0,0,1,0;
   0,0,0,1];
for k=1:len
    % 1 状态预测    
    ex = x_hat(1) + x_hat(3)*sin(x_hat(4));
    ny = x_hat(2) + x_hat(3)*cos(x_hat(4));
    s=x_hat(3);
    f=x_hat(4);
    x_forecast = [ex; ny; s; f];%预测值
    % 2  观测预测
    y_yuce=H*x_forecast;
    %  状态矩阵
    F = zeros(4,4);
    F(1,1) = 1; F(1,2) = 0; F(1,3) = sin(x_forecast(4)); F(1,4) = x_forecast(3)*cos(x_forecast(4));
    F(2,1) = 0; F(2,2) = 1; F(2,3)=cos(x_forecast(4)); F(2,4) = -x_forecast(3)*sin(x_forecast(4));
    F(3,1) = 0; F(3,2) = 0; F(3,3) = 1; F(3,4) = 0;
    F(4,1) = 0; F(4,2) = 0; F(4,3) = 0; F(4,4) = 1;
    Pkk_1 = F*Pk*F'+Qk;
    %计算卡尔曼增益
    Kk = Pkk_1*H'*(H*Pkk_1*H'+Rk)^-1; 
    %获取EKF估计值
    x_hat = x_forecast+Kk*(Z(k,:)'-y_yuce);%校正
    %计算状态向量的估计协方差矩阵
    Pk = (eye(4)-Kk*H)*Pkk_1;  
    %将滤波结果保存在矩阵中
    X_est(k,:) = x_hat';
end
%%图形
figure;
plot(X_est(:,1),X_est(:,2), '*g');
xlabel('东向'); 
ylabel('北向'); 
title('EKF simulation');
legend('行走轨迹');